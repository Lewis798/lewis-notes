name: Deploy Blog Pages

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.19.0' # 更新Node.js版本

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Deploy to Nginx Server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
        run: |
          sudo apt-get update && sudo apt-get install -y sshpass

          tar -czf site.tar.gz -C docs/dev-ops/nginx/html .
          
          if [ -n "$SSH_PRIVATE_KEY" ]; then
            echo "Using SSH private key for authentication"
            mkdir -p ~/.ssh
            echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
            scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no site.tar.gz $SSH_USERNAME@$SSH_HOST:/tmp/site.tar.gz
            ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST "tar -xzf /tmp/site.tar.gz -C $REMOTE_PATH && rm /tmp/site.tar.gz"
          elif [ -n "$SSH_PASSWORD" ]; then
            echo "Using SSH password for authentication"
            sshpass -p $SSH_PASSWORD scp -o StrictHostKeyChecking=no site.tar.gz $SSH_USERNAME@$SSH_HOST:/tmp/site.tar.gz
            sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST "tar -xzf /tmp/site.tar.gz -C $REMOTE_PATH && rm /tmp/site.tar.gz"
          else
            echo "Error: No SSH authentication method provided" >&2
            exit 1
          fi
